<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mysqlCart">
   
   <!-- 장바구니 조회 -->
   <select id="cart_list" resultType="cartDTO">
      select * from cart WHERE email = #{email} AND result &lt; 3
   </select>
   
   <!-- 장바구니 추가  -->
   <insert id="cart_insert">
      INSERT INTO cart 
      (email, prodnum, name, image, quantity, price, totalprice) 
      VALUES 
      (#{email}, #{prodnum},
      (SELECT `NAME` FROM product WHERE prodnum = #{prodnum}),
      (SELECT `image` FROM product WHERE prodnum = #{prodnum}), #{quantity},
      (SELECT `price` FROM product WHERE prodnum = #{prodnum}), 
      #{quantity}*(SELECT price FROM product WHERE prodnum = #{prodnum}))
   </insert>

   <!-- 장바구니 품목 삭제 -->
   <delete id="cart_delete">   
       delete from cart where cartnum = #{cartnum}
   </delete>

   <!-- 장바구니에서 구매완료 품목 삭제 -->
   <delete id="cart_redelete">   
       delete from cart where email = #{email} AND result = 3
   </delete>

   <!-- 장바구니 수량 변경 -->
   <update id="cart_update">
      update cart set 
      quantity = #{quantity}, totalprice = #{quantity}*(SELECT price FROM product WHERE prodnum = #{prodnum}) where cartnum = #{cartnum}
   </update>

   <!-- 주문 대기 상태로 변경 (1개 이상의 cartnum 선택시 배열으로 받아서 for문 이용하여 1개이상 수정-->
   <update id="cart_order">
     UPDATE cart SET result = 2 WHERE cartnum = #{cartnum}
   </update>

   <!-- 장바구니 결과값 초기화(장바구니 열때마다 실행) -->
   <update id="cart_result">
     UPDATE cart SET result = 1 WHERE result = 2 AND email = #{email}
   </update>

    <!-- 장바구니 합계-->
    <select id="cart_tot" resultType="int">
      select ifnull(sum(price*quantity),0) from cart where email = #{email} AND result = 1
    </select> 

   <!-- 주문 대기 목록 -->
   <select id="order_list" resultType="cartDTO">
      SELECT * FROM cart WHERE result = 2 AND email = #{email}
   </select>

   <!-- 주문 품목 삭제 -->
   <!-- 삭제해도 장바구니에는 존재함 -->
   <update id="order_delete">
     UPDATE cart SET result = 1 WHERE cartnum = #{cartnum}
   </update>

   <!-- 적립금 조회 -->
   <select id="reserves_list" resultType="int">
      SELECT reserves FROM member WHERE email = #{email}
   </select>
	
   <!-- 바로 구매  -->
   <insert id="order_now">
     INSERT INTO cart 
     (email, prodnum, name, image, price, quantity, totalprice, result) 
      VALUES 
      (#{email}, #{prodnum},
      (SELECT `NAME` FROM product WHERE prodnum = #{prodnum}),
      (SELECT `image` FROM product WHERE prodnum = #{prodnum}),
      (SELECT `price` FROM product WHERE prodnum = #{prodnum}), #{quantity},
      #{quantity}*(SELECT price FROM product WHERE prodnum = #{prodnum}), 2)
   </insert>

    <!-- 구매 페이지 합계-->
    <select id="order_tot" resultType="int">
      select ifnull(sum(price*quantity),0) from cart where email = #{email} AND result = 2
    </select> 

    <!-- 조회 시 필요한 데이터 -->
    <select id="order_list_date" resultType="cartDTO">
       select ifnull(sum(price*quantity),0) AS totalprice, <!-- 총금액 -->
               rankfunction(#{email}) AS sale, <!-- 할인율 -->
               salefunction(#{email}, #{result}) AS saleprice, <!-- 할인금액 -->
               payfunction(#{email}, #{result}, #{usereserves}) AS payprice, <!-- 결제금액 -->
               reservesfunction(#{email}, #{result}, #{usereserves}) AS reserves <!-- 적립금 -->
               from cart where email = #{email} AND result = #{result}
    </select> 

   <!-- 총결제금액, 적립금, 랭크변환 실행 주문추가 insert 후 실행 --!>
   <resultMap id = "order_result_add" type = "hashmap"> </ resultMap>
   <select id = "order_result_add" statementType = "CALLABLE">
	{	call orderresultadd(#{email}, #{result}, #{usereserves})	}
   </select>

</mapper>